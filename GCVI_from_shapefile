// Google Earth Engine Script //

// This script will show a color-coded GCVI on a map for a given shapefile.
// It pulls the least cloudy image from between 'start_date' and 'end_date'
// and calculates GCVI from the singular image.

// This script requires an asset upload in the form of a shapefile.
// When the shapefile is uploaded, it will be imported with the name 'table'.
// If renamed, also rename all instance of 'table' within this template.

var s2 = ee.ImageCollection("COPERNICUS/S2_SR"); // Sentinel-2 Surface Reflectance

// Images will be searched only in this date range:
var start_date = '2017-03-28';  // customize this date (keep single quotes)
var end_date = '2019-10-20';    // customize this date (keep single quotes)

// Find an image from the image collection based on filters
var image = ee.Image(
  s2.filterBounds(table) // image collection filtered spatially (table should be an import of a shapefile asset)
    .filterDate(start_date, end_date) // filtered temporally
    .sort('CLOUD_COVER') // Get least cloudy image
    .first())
    .clip(table); // Show only within polygons
  
// Calculate GCVI
var nir = image.select('B8');   // Sentinel NIR = 'B8'; Landsat NIR = 'B5'
var green = image.select('B3'); // Sentinel Green = 'B3'; Landsat Green = 'B3'
var gcvi = (nir.divide(green)).subtract(1).rename('GCVI'); // GCVI = (NIR / Green) - 1

// Show GCVI on the map!
Map.centerObject(table, 13); // center the map on table, zoom level specified
var gcviParams = {min: -1, max: 1, palette: ['blue', 'white', 'green']}; // [Negative GCVIs, Zero GCVIs, Positive GCVIs]
Map.addLayer(gcvi, gcviParams, 'GCVI image');
Map.addLayer(table, false); // Make true to see shapes in GEE

// Get a list of all metadata properties for the image
var properties = image.propertyNames();
print('Metadata properties: ', properties); // ee.List of metadata properties

// Get the timestamp and convert it to a date.
var date = ee.Date(image.get('system:time_start'));
print('Timestamp: ', date); // ee.Date
